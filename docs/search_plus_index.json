{"./":{"url":"./","title":"Computer Network Lab Manual","keywords":"","body":"Computer Network Lab Manual Computer Network, Nanjing University, Spring 2020 Course Info Course Number: 22010050 Lecturer: Chen Tian & Wenzhong Li Website: https://cs.nju.edu.cn/lwz/networks-2020/ Contact Course QQ group: 940577165 You can find TAs and our 教学立方 invitation code after joining this group. Lab Assignments Lab 0: Switchyard & Mininet Out: , due . Lab 1: Learning switch Out: , due . Lab 2: IPv4 Router Out: , due . Lab 2a: Respond to ARP Out: , due . Lab 2b: Forwarding packets Out: , due . Lab 2c: Respond to ICMP Out: , due . Lab 3: Reliable Communication Out: , due . Lab 3a: Sender and Router Out: , due . Lab 3b: Receiver Out: , due . Policies We encourage discussions with others to clarify questions about homework problems and programming assignment problem statements. However programming solutions must be your own! "},"content/ch00/lab-0.html":{"url":"content/ch00/lab-0.html","title":"Lab 0: Switchyard & Mininet","keywords":"","body":"Lab 0: Switchyard & Mininet Overview In this chapter we will introduce all preparations for our network experiments. Details Our lab assignments are based on CS640 in Wisconsin University. Most materials are the same. In the future, we will improve the experimantal content based on feedback. For this lab assignment, you will gradually master our experimental environment. But we need you to know some basic skills, such as how to develope on linux or how to program. If you are not familiar with these, please tell TAs. We will list some helpful materials for you to get started quickly. First, you need to complete setting up your enviroment. Read section prerequisites. "},"content/ch00/prerequisites.html":{"url":"content/ch00/prerequisites.html","title":"Prerequisites","keywords":"","body":"Prerequisites Virtual Machine We are providing you with a Ubuntu 18.04 (64-bit) VM image for this assignment. This image has Switchyard, Mininet and Wireshark installed so you do not need to worry about setting up the enviroment. You can find the VM image here. (user name: njucs - password: 123) You can learn more about importing a VM image in VirtualBox here. You are also free to use your favorite vitualization software for importing the image but you will most probably have to deal with the possible issues on yourself. If you are a free soul and want to setup Switchyard in a different environment you are welcome to do that as well. You can find some useful information here. This might or might not be useful for you depending on your environment. "},"appendix/about-this-repository.html":{"url":"appendix/about-this-repository.html","title":"About This Repository","keywords":"","body":"About This Repository This repository is the sorce code of our manual. Building You need to install gitbook-cli first. Then run gitbook build . docs When you build this for the first time, you need to install plugins. gitbook install License The manual is distributed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Repository Sturcture The body is placed under the content folder, and the chapters are placed in the corresponding chapter folder, starting with ch and followed by two-digit numbers. Each section and subsection is placed in the chapter folder. The pictures and other content used in the text are placed in the assets folder in the corresponding chapter folder. "},"appendix/appendix.html":{"url":"appendix/appendix.html","title":"Appendix","keywords":"","body":"Appendix Some notes and additional materials are in this chapter. "},"appendix/environment-setup.html":{"url":"appendix/environment-setup.html","title":"Environment Setup","keywords":"","body":"Environment Setup If you see here then you must be a high-end player, the instructions here will be very simple. Install Switchyard You can find instructions here, the repository of switchyard on GitHub. A quick note here for Ubuntu. git clone https://github.com/jsommers/switchyard.git sudo apt-get install libffi-dev libpcap-dev python3-dev python3-pip You can install Switchyard and the necessary related packages in an isolated Python virtual environment (\"venv\"), which is the recommended path, or in the system directories, which is often less desirable. The venv route is highly suggested, since it makes all installation \"local\" and can easily destroyed, cleaned up, and recreated. To create a new virtual environment, you could do something like the following under your workspace folder python3 -m venv syenv You can change the name syenv to whatever you'd like to name your virtual environment. Next, you need to activate the environment. The instructions vary depending on the shell you're using. On bash, the command is source ./syenv/bin/activate You'll need to replace syenv with whatever you named the virtual environment. If you're using a different shell than bash, refer to Python documentation on the venv module. Finally, install Switchyard. All the required additional libraries should be automatically installed, too. python3 -m pip install switchyard Then I suggest to exclude your virtual environment out of git tracking. Add this line in .gitignore syenv/ Install Mininet sudo apt-get install mininet Or you want to build mininet yourself. The installation guide is here. Install Wireshark sudo add-apt-repository ppa:wireshark-dev/stable sudo apt-get update sudo apt-get install wireshark You need to configure wireshark during installation. For non-superusers capturing packets, chose Yes here. Then add your user to wireshark user group to allow you capturing packets. sudo usermod -a -G wireshark $USER Other Softwares You also want to install some editors like Vim, Emacs, Visual Studio Code, Sublime and so on. But we do not install any one of them to avoiding a quarrel about the best editor. Chose your favorite one and install it yourself. Another helpful module VBoxGusetAdditions is not installed because various virtual machine hypervisors you will use. "}}